# Copyright (C) 2018 Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Elasticsearch StatefulSet: Single node.

{{- if (index .Values "single-node" "enabled") }}

{{- $this := . }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "app.name" . }}-elasticsearch
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "app.name" . }}-elasticsearch
    chart: {{ template "app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "app.name" . }}-elasticsearch
  serviceName: {{ template "app.name" . }}-elasticsearch
  template:
    metadata:
      labels:
        app: {{ template "app.name" . }}-elasticsearch
      name: {{ template "app.name" . }}-elasticsearch
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # Set the wazuh-elasticsearch volume permissions so the elasticsearch user can use it!
      initContainers:
{{- if (index .Values "single-node" "sts" "persistentVolume") }}        
        - name: volume-mount-hack
          image: busybox
          {{- with (index .Values "volume-mount-hack" "resources") }}
          resources:
          {{- .|toYaml|nindent 12}}
          {{- end }}
          command:
            - sh
            - '-c'
            {{- range $vmName, $vmData := (index .Values "single-node" "sts" "persistentVolume")}}
            - 'chown -R 1000:1000 {{ $vmData.mountPath }}'
            {{- end }}
          volumeMounts:
            {{- range $vmName, $vmData := (index .Values "single-node" "sts" "persistentVolume") }}
            - mountPath: {{ $vmData.mountPath }}
              name: {{ $vmName }}
            {{- end }} 
{{- end }}
        - name: increase-the-vm-max-map-count
          image: busybox
          command:
            - sysctl
            - -w
            - vm.max_map_count=262144
          securityContext:
            privileged: true
      containers:
        - name: {{ template "app.name" . }}-elasticsearch
          image: "{{ index .Values "single-node" "sts" "image" }}:{{ index .Values "single-node" "sts" "version" }}"
          {{- with (index .Values "single-node" "sts" "resources") }}
          resources:
          {{- .|toYaml|nindent 12}}
          {{- end }}
          env:
          {{- range $key, $value := (index .Values "single-node" "sts" "env") }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- with (index .Values "single-node" "sts" "ports") }}
          ports:
          {{- .|toYaml|nindent 12}}
          {{- end }}
{{- if (index .Values "single-node" "sts" "persistentVolume") }} 
          volumeMounts:
            {{- range $vmName, $vmData := (index .Values "single-node" "sts" "persistentVolume") }}
            - mountPath: {{ $vmData.mountPath }}
              name: {{ $vmName }}
            {{- end }}                    
      volumes:
        {{- range $vmName, $vmData := (index .Values "single-node" "sts" "persistentVolume") }}
        {{- if $vmData.existingClaim }}
        - name: {{ $vmName }}
          persistentVolumeClaim:
            claimName: {{ $vmData.existingClaim }}
        {{- end }}
        {{- end }}    
  volumeClaimTemplates:
    {{- range $vmName, $vmData := (index .Values "single-node" "sts" "persistentVolume") }}
      {{- if (not $vmData.existingClaim) }}
    - metadata:
        name: {{ $vmName }}
        namespace: {{ $this.Release.Namespace }}
      spec:
          {{- if (not $vmData.storageClassName) }}
        selector:
          matchLabels:
            app: {{ template "app.name" $this }}-elasticsearch
            release: {{ $this.Release.Name }}
          {{- end }}
        resources:
          requests:
            storage: {{ $vmData.capacity }}
          {{- if $vmData.storageClassName }}
        storageClassName: {{ $vmData.storageClassName }}
          {{- end }}
          {{- if $vmData.accessModes }}
        accessModes:
          {{- range $item := $vmData.accessModes }}
          - {{ $item }}
          {{- end }}
          {{- end }}
      {{- end }}
    {{- end }}
{{- end }}
{{- end }}