version: &version 3.13.2_7.9.1

api-port: &api-port 55000
es-rest-port: &es-rest-port 9200
es-nodes-port: &es-nodes-port 9300
registration-port: &registration-port 1515
cluster-port: &cluster-port 1516
agents-events-port: &agents-events-port 1514
web-https-port: &web-https-port 443
kibana-port: &kibana-port 5601
      
api-cred-username: &api-cred-username Zm9v # string "foo" base64 encoded
api-cred-password: &api-cred-password YmFy # string "bar" base64 encoded
wazuh-cluster-key: &wazuh-cluster-key MTIzYTQ1YmM2N2RlZjg5MWdoMjNpNDVqazY3bDhtbjk= # string "123a45bc67def891gh23i45jk67l8mn9" base64 encoded
authd-password: &authd-password cGFzc3dvcmQ= # string "password" base64 encoded
  
volume-mount-hack: &volume-mount-hack
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 256Mi
  
wazuh-elasticsearch:    
  es-rest-port: *es-rest-port
  es-nodes-port: *es-nodes-port  
  volume-mount-hack: *volume-mount-hack  
  
  image: &wazuh-elasticsearch-image wazuh/wazuh-elasticsearch
  ports: &wazuh-elasticsearch-ports
    - containerPort: *es-rest-port
      name: es-rest
    - containerPort: *es-nodes-port
      name: es-nodes
      
  cluster:
    enabled: false  
    
    elasticsearchPersistentVolumeCluster: &elasticsearchPersistentVolumeCluster
      wazuh-elasticsearch-elasticsearch:
        mountPath: /usr/share/elasticsearch/data
        reclaimPolicy: Retain
        capacity: 10Gi
        storageClassName: microk8s-hostpath
        accessModes:
          - ReadWriteOnce 
          
    data-sts:
      image: wazuh/wazuh-elasticsearch
      version: *version
      ports: *wazuh-elasticsearch-ports
      persistentVolume: *elasticsearchPersistentVolumeCluster        
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
        limits:
          cpu: 1
          memory: 2Gi      
      env:
        ES_JAVA_OPTS: '-Xms1024m -Xmx1024m'
        node.master: false
        node.data: true
        node.ingest: false
        bootstrap.memory_lock: false
        cluster.name: wazuh
        network.host: 0.0.0.0
        node.name: wazuh-elasticsearch-data-elasticsearch
        discovery.zen.ping.unicast.hosts: wazuh-elasticsearch-elasticsearch
        ELASTICSEARCH_URL: wazuh-elasticsearch-elasticsearch:9200 
        
    master-sts:
      image: wazuh/wazuh-elasticsearch
      version: *version
      ports: *wazuh-elasticsearch-ports      
      persistentVolume: *elasticsearchPersistentVolumeCluster      
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
        limits:
          cpu: 1
          memory: 2Gi      
      env:
        ES_JAVA_OPTS: '-Xms512m -Xmx512m'
        node.master: true
        node.data: false
        node.ingest: false
        bootstrap.memory_lock: false
        cluster.name: wazuh
        network.host: 0.0.0.0
        node.name: wazuh-elasticsearch-elasticsearch
        discovery.zen.ping.unicast.hosts: wazuh-elasticsearch-elasticsearch
        discovery.zen.minimum_master_nodes: 2
        ELASTICSEARCH_URL: wazuh-elasticsearch-elasticsearch:9200
        
    api-svc:
      ports:
      - name: es-rest
        port: *es-rest-port
        targetPort: *es-rest-port
      type: ClusterIP
#      type: LoadBalancer 

    svc: 
      ports:
      - name: es-nodes
        port: *es-nodes-port
        targetPort: *es-nodes-port
        
  single-node:
    enabled: true
    
    elasticsearchPersistentVolumeSingleNode: &elasticsearchPersistentVolumeSingleNode
      wazuh-elasticsearch-elasticsearch:
        mountPath: /usr/share/elasticsearch/data
        reclaimPolicy: Retain
        capacity: 30Gi
        storageClassName: microk8s-hostpath
        accessModes:
          - ReadWriteOnce
          
    sts:
      image: wazuh/wazuh-elasticsearch
      version: *version
      ports: *wazuh-elasticsearch-ports   
      persistentVolume: *elasticsearchPersistentVolumeSingleNode      
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
        limits:
          cpu: 1
          memory: 2Gi      
      env:
        ES_JAVA_OPTS: '-Xms1024m -Xmx1024m'
        bootstrap.memory_lock: false
        cluster.name: wazuh
        network.host: 0.0.0.0
        node.name: node-1
        ELASTICSEARCH_URL: wazuh-elasticsearch-elasticsearch:9200
        
    api-svc:
      ports:
      - name: es-rest
        port: *es-rest-port
        targetPort: *es-rest-port  
      type: ClusterIP
#      type: LoadBalancer 

wazuh-managers: 
  registration-port: *registration-port
  cluster-port: *cluster-port
  api-port: *api-port
  agents-events-port: *agents-events-port
  api-cred-username: *api-cred-username
  api-cred-password: *api-cred-password
  wazuh-cluster-key: *wazuh-cluster-key
  authd-password: *authd-password  
  volume-mount-hack: *volume-mount-hack  
  
  master-sts:
    image: wazuh/wazuh
    version: *version    
    resources:
      requests:
        cpu: 2
        memory: 1024Mi
      limits:
        cpu: 2
        memory: 2048Mi
    ports:
      - containerPort: *registration-port
        name: registration
      - containerPort: *cluster-port
        name: cluster
      - containerPort: *api-port
        name: api 
    env:
      API_USER: *api-cred-username
      API_PASS: *api-cred-password
      WAZUH_CLUSTER_KEY: *wazuh-cluster-key 
      ELASTICSEARCH_URL: wazuh-elasticsearch-elasticsearch:9200 
    persistentVolume:     
      wazuh-managers-manager-master:
          mountPath: /var/ossec/data
          reclaimPolicy: Retain
          capacity: 50Gi
          storageClassName: microk8s-hostpath
          accessModes:
            - ReadWriteOnce 
            
  worker-sts:
    image: wazuh/wazuh
    version: *version
    resources:
      requests:
        cpu: 2
        memory: 1024Mi
      limits:
        cpu: 2
        memory: 2048Mi
    ports:
      - containerPort: *agents-events-port
        name: agents-events
      - containerPort: *cluster-port
        name: cluster
    env:
      API_USER: *api-cred-username
      API_PASS: *api-cred-password
      WAZUH_CLUSTER_KEY: *wazuh-cluster-key
      ELASTICSEARCH_URL: wazuh-elasticsearch-elasticsearch:9200  
    persistentVolume:     
      wazuh-managers-manager-worker:
          mountPath: /var/ossec/data
          reclaimPolicy: Retain
          capacity: 10Gi
          storageClassName: microk8s-hostpath
          accessModes:
            - ReadWriteOnce
            
  master-svc:
    ports:
    - name: registration
      port: *registration-port
      targetPort: *registration-port
    - name: api
      port: *api-port
      targetPort: *api-port
    annotations: {}  
#    annotations:
##      domainName: changeme
#      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp 
    type: ClusterIP
#    type: LoadBalancer

  cluster-svc:
    ports:
    - name: cluster
      port: *cluster-port
      targetPort: *cluster-port 
      
  workers-svc:
    ports:
    - name: agents-events
      port: *agents-events-port
      targetPort: *agents-events-port
    annotations: {}  
#    annotations:
##      domainName: wazuh-manager.some-domain.com  # TODO: Change this for a Hosted Zone you configured in AWS Route 53
#      service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0  
    type: ClusterIP
#    type: LoadBalancer

wazuh-kibana:  
  web-https-port: *web-https-port
  kibana-port: *kibana-port 
  image: wazuh/wazuh-kibana
  api-port: *api-port
  version: *version  
  volume-mount-hack: *volume-mount-hack
  
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 400m
      memory: 2048Mi
  ports:
    - containerPort: *kibana-port
      name: kibana
  env:
    ELASTICSEARCH_URL: http://wazuh-elasticsearch-elasticsearch:9200
    ELASTICSEARCH_KIBANA_IP: http://wazuh-elasticsearch-elasticsearch:9200
    KIBANA_IP: wazuh-kibana-kibana
    NODE_OPTIONS: '--max-old-space-size=2048'
    WAZUH_API_URL: https://wazuh-managers-master
    API_PORT: *api-port
    API_USER: *api-cred-username
    API_PASS: *api-cred-password
    
  svc:
    ports:
    - name: kibana
      port: *kibana-port
      targetPort: *kibana-port
      
  nginx:
    image: wazuh/wazuh-nginx
    version: *version
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 200m
        memory: 128Mi
    ports:
      - containerPort: 80
      - containerPort: *web-https-port 
    env:
      KIBANA_HOST: wazuh-kibana-kibana:5601
      NGINX_PORT: *web-https-port 
      NGINX_NAME: foo
      NGINX_PWD: bar
      
  nginx-svc:
    ports:
    - name: web-https
      port: *web-https-port
      targetPort: *web-https-port
    annotations: {}  
#    annotations:
##      domainName: changeme
##      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: changeme
#      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: *web-https-port
#      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https  
    type: ClusterIP
#    type: LoadBalancer  