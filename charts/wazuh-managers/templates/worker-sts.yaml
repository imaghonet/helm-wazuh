# Copyright (C) 2018 Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Wazuh worker StatefulSet: 0

{{- $this := . }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "app.name" . }}-manager-worker
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "app.name" . }}-manager-worker
    chart: {{ template "app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ template "app.name" . }}-manager
      node-type: worker
  serviceName: {{ template "app.name" . }}-cluster
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ template "app.name" . }}-manager
        node-type: worker
      name: {{ template "app.name" . }}-manager-worker
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ template "app.name" . }}-manager
          image: "{{ index .Values "worker-sts" "image" }}:{{ index .Values "worker-sts" "version" }}"
          {{- with (index .Values "worker-sts" "resources") }}
          resources:
          {{- .|toYaml|nindent 12}}
          {{- end }}
          {{- with (index .Values "worker-sts" "ports") }}
          ports:
          {{- .|toYaml|nindent 12}}
          {{- end }}
          env:
            - name: API_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "app.name" . }}-api-cred
                  key: username
            - name: API_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "app.name" . }}-api-cred
                  key: password
            - name: WAZUH_CLUSTER_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "app.name" . }}-cluster-key
                  key: key
            - name: ELASTICSEARCH_URL
              value: "wazuh-elasticsearch-elasticsearch:{{ index .Values "es-rest-port" }}"      
{{- if .Values.persistentVolume }} 
          volumeMounts:
            {{- range $vmName, $vmData := .Values.persistentVolume }}
            - mountPath: {{ $vmData.mountPath }}
              name: {{ $vmName }}
            {{- end }} 
            - name: config
              mountPath: /wazuh-config-mount/etc/ossec.conf
              subPath: ossec.conf
              readOnly: true            
      volumes:
        {{- range $vmName, $vmData := .Values.persistentVolume }}
        {{- if $vmData.existingClaim }}
        - name: {{ $vmName }}
          persistentVolumeClaim:
            claimName: {{ $vmData.existingClaim }}
        {{- end }}
        {{- end }} 
        - name: config
          configMap:
            name: {{ template "app.name" . }}-manager-worker-conf       
  volumeClaimTemplates:
    {{- range $vmName, $vmData := .Values.persistentVolume }}
      {{- if (not $vmData.existingClaim) }}
    - metadata:
        name: {{ $vmName }}
        namespace: {{ .Release.Namespace }}
      spec:
          {{- if (not $vmData.storageClassName) }}
        selector:
          matchLabels:
            app: {{ template "app.name" $this }}-manager-worker
            release: {{ $this.Release.Name }}
          {{- end }}
        resources:
          requests:
            storage: {{ $vmData.capacity }}
          {{- if $vmData.storageClassName }}
        storageClassName: {{ $vmData.storageClassName }}
          {{- end }}
          {{- if $vmData.accessModes }}
        accessModes:
          {{- range $item := $vmData.accessModes }}
          - {{ $item }}
          {{- end }}
          {{- end }}
      {{- end }}
    {{- end }}
{{- end }}
